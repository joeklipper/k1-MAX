# K1
# CreateDate: 2023/03/21
[homing_override]
axes = xyz
set_position_z = 0
gcode = 
	{% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
	SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE
	G90
	G0 Z5 F600
	{% if home_all or 'X' in params %}
	_HOME_X
	{% endif %}
	{% if home_all or 'Y' in params %}
	_HOME_Y
	{% endif %}
	{% if home_all or 'X' in params %}
	_HOME_X
	{% endif %}
	{% if home_all or 'Y' in params %}
	_HOME_Y
	{% endif %}
	{% if home_all or 'Z' in params %}
	_HOME_Z
	{% endif %}
	RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

# [gcode_macro _HOME_X]
# gcode = 
# 	SAVE_GCODE_STATE NAME=STATE_HOME_X
	
# 	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
# 	{% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
# 	{% set HOME_CURRENT = 1.5 %}
# 	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
# 	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
# 	G28 X
# 	G91
# 	G1 X-10 F1200
# 	G4 P1000
	
# 	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
# 	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
# 	RESTORE_GCODE_STATE NAME=STATE_HOME_X

# [gcode_macro _HOME_Z]
# gcode = 
# 	G90
# 	{% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
# 	{% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
# 	G1 X{POSITION_X} Y{POSITION_Y} F8000
# 	G4 P2000
# 	RUN_SHELL_COMMAND CMD=cam-stop
# 	G28 Z
# 	G90
# 	RUN_SHELL_COMMAND CMD=cam-start
# 	G1 Z10 F1200
# 	G4 P1000

# [gcode_macro _HOME_Y]
# gcode = 
# 	SAVE_GCODE_STATE NAME=STATE_HOME_Y
	
# 	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
# 	{% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
# 	{% set HOME_CURRENT = 1.5 %}
# 	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
# 	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
# 	G28 Y
# 	G91
# 	G1 Y+10 F1200
# 	G4 P1000
	
# 	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
# 	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
# 	RESTORE_GCODE_STATE NAME=STATE_HOME_Y

[gcode_macro PRINT_START]
variable_bed_temp = 100
variable_extruder_temp = 170
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(100)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(170)|float %}
	M140 S{bed_temp}
	G28
	
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	
	
	M190 S{bed_temp}
	M109 S{extruder_temp}

#[gcode_shell_command  KILL_CAMERA]
#command: systemctl stop crowsnest

#[gcode_shell_command  START_CAMERA]
#command: systemctl start crowsnest

[gcode_macro END_PRINT]
gcode = 
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 15, th.axis_maximum.z]|min %}
	M400
	G92 E0
	G1 E-2.0 F3600
	M220 S100
	M204 S500
	TURN_OFF_HEATERS
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(200) %}      #edit to your park position
    {% set y = params.Y|default(200) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro INPUTSHAPER]
gcode:
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  G90
  G28
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
  G1 X{POSITION_X} Y{POSITION_Y} F6000
  G1 Z10 F600
  SHAPER_CALIBRATE
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro TUNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  CANCEL_PRINT_BASE

[gcode_macro M141]
description: Set Chamber Temperature with slicers
gcode:
  {% set s = params.S|float %}
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber_fan TARGET={s}
  { action_respond_info("Chamber target temperature: %s°C" % (s)) }

[gcode_macro M191]
description: Wait for Chamber Temperature to heat up
gcode:
  {% set s = params.S|float %}
  {% set chamber_temp = printer["temperature_sensor chamber_temp"].temperature|float %}
  {% if s > 0 %}
    M141 S{s}
  {% endif %}
  {% if s > chamber_temp and s <= 90 %}
    M140 S100
    { action_respond_info("Waiting for the bed to heat up the chamber...") }
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber_fan" MINIMUM={s-1}
    { action_respond_info("Chamber target temperature reached: %s°C" % (s)) }
    M140 S{s}
  {% endif %}


  
######################################
#                                    #
#    PPPP     IIIII       DDDD       # 
#    P  PP      I         D   D      #
#    PPPP       I         D    D     #
#    P          I         D   D      #
#    P        IIIII       DDDD       #
#                                    #
######################################


[gcode_macro APID_HOTEND230]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=230
  SAVE_CONFIG


[gcode_macro APID_HOTEND240]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=240
  SAVE_CONFIG


[gcode_macro APID_HOTEND260]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=260
  SAVE_CONFIG


[gcode_macro APID_HOTEND270]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=270
  SAVE_CONFIG

  
[gcode_macro APID_HOTEND280]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=280
  SAVE_CONFIG


[gcode_macro APID_HOTEND290]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=290
  SAVE_CONFIG


[gcode_macro ABEDPID100]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  SAVE_CONFIG


[gcode_macro ABEDPID65]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=65
  SAVE_CONFIG